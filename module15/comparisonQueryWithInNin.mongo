// MongoDB implicitly applies an $and when you use multiple fields or multiple conditions at the top level of a query.
// ✅ Example 1: $in with Multiple Conditions (Implicit $and)
db.users.find({
  gender: { $in: ["Female", "Other"] },
  interests: { $in: ["Cooking", "Reading"] },
});

// MongoDB treats this as:
// That means: match if BOTH conditions are true — this is an implicit $and.
{
  $and: [
    { gender: { $in: ["Female", "Other"] } },
    { interests: { $in: ["Cooking", "Reading"] } },
  ];
}

// ✅ If You Want OR Behavior
db.users.find({
  $or: [
    { gender: { $in: ["Female", "Other"] } },
    { interests: { $in: ["Cooking", "Reading"] } },
  ],
});

// ✅  Explicit $and, $or, $nor
 db.test.find({
     $and: [
         { age: { $gte: 18 } }, { age: { $lte: 30 } }, { gender: "Female" }],
     $or: [
         { interests: "Reading" }, { interests: "Cooking" }],
     $nor: [{ interests: "Gaming" }, { interests: "Travelling" }]
 }).project({
     age: 1, interests: 1, gender: 1
 }).sort({ age: 1 })
